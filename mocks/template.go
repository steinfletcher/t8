// Code generated by MockGen. DO NOT EDIT.
// Source: template.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "github.com/steinfletcher/t8/domain"
	reflect "reflect"
)

// MockTemplateRenderer is a mock of TemplateRenderer interface
type MockTemplateRenderer struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateRendererMockRecorder
}

// MockTemplateRendererMockRecorder is the mock recorder for MockTemplateRenderer
type MockTemplateRendererMockRecorder struct {
	mock *MockTemplateRenderer
}

// NewMockTemplateRenderer creates a new mock instance
func NewMockTemplateRenderer(ctrl *gomock.Controller) *MockTemplateRenderer {
	mock := &MockTemplateRenderer{ctrl: ctrl}
	mock.recorder = &MockTemplateRendererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTemplateRenderer) EXPECT() *MockTemplateRendererMockRecorder {
	return m.recorder
}

// Render mocks base method
func (m *MockTemplateRenderer) Render(targetDir string, conf domain.Config) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Render", targetDir, conf)
}

// Render indicates an expected call of Render
func (mr *MockTemplateRendererMockRecorder) Render(targetDir, conf interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockTemplateRenderer)(nil).Render), targetDir, conf)
}
